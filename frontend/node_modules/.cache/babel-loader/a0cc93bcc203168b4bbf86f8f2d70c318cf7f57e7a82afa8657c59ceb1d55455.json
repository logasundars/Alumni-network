{"ast":null,"code":"import _objectSpread from\"E:/Alumini- network/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{Form,Button,Card,Alert,Container,Row,Col}from'react-bootstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=_ref=>{let{onRegister,onSwitchToLogin}=_ref;const[formData,setFormData]=useState({email:'',password:'',confirmPassword:'',firstName:'',lastName:''});const[loading,setLoading]=useState(false);const[error,setError]=useState('');const handleChange=e=>{setFormData(_objectSpread(_objectSpread({},formData),{},{[e.target.name]:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');if(formData.password!==formData.confirmPassword){setError('Passwords do not match');setLoading(false);return;}try{const response=await fetch('/api/auth/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:formData.email,password:formData.password,firstName:formData.firstName,lastName:formData.lastName})});const data=await response.json();if(response.ok){onRegister(data.token,{email:data.email,firstName:data.firstName,lastName:data.lastName,role:data.role});}else{setError(data||'Registration failed');}}catch(err){setError('Network error. Please try again.');}finally{setLoading(false);}};return/*#__PURE__*/_jsx(Container,{className:\"mt-5\",children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{md:6,lg:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{className:\"text-center\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Register for Alumni Network\"})}),/*#__PURE__*/_jsxs(Card.Body,{children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"First Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"firstName\",value:formData.firstName,onChange:handleChange,required:true,placeholder:\"Enter your first name\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Last Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"lastName\",value:formData.lastName,onChange:handleChange,required:true,placeholder:\"Enter your last name\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true,placeholder:\"Enter your email\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true,placeholder:\"Enter your password\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange,required:true,placeholder:\"Confirm your password\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",className:\"w-100 mb-3\",disabled:loading,children:loading?'Registering...':'Register'}),/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",type:\"button\",className:\"w-100\",onClick:onSwitchToLogin,children:\"Already have an account? Login\"})]})]})]})})})});};export default Register;","map":{"version":3,"names":["React","useState","Form","Button","Card","Alert","Container","Row","Col","jsx","_jsx","jsxs","_jsxs","Register","_ref","onRegister","onSwitchToLogin","formData","setFormData","email","password","confirmPassword","firstName","lastName","loading","setLoading","error","setError","handleChange","e","_objectSpread","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","role","err","className","children","md","lg","Header","Body","variant","onSubmit","Group","Label","Control","type","onChange","required","placeholder","disabled","onClick"],"sources":["E:/Alumini- network/frontend/src/components/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Card, Alert, Container, Row, Col } from 'react-bootstrap';\r\n\r\ninterface RegisterProps {\r\n  onRegister: (token: string, user: any) => void;\r\n  onSwitchToLogin: () => void;\r\n}\r\n\r\nconst Register: React.FC<RegisterProps> = ({ onRegister, onSwitchToLogin }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwords do not match');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email: formData.email,\r\n          password: formData.password,\r\n          firstName: formData.firstName,\r\n          lastName: formData.lastName,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        onRegister(data.token, {\r\n          email: data.email,\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n          role: data.role,\r\n        });\r\n      } else {\r\n        setError(data || 'Registration failed');\r\n      }\r\n    } catch (err) {\r\n      setError('Network error. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6} lg={4}>\r\n          <Card>\r\n            <Card.Header className=\"text-center\">\r\n              <h4>Register for Alumni Network</h4>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={formData.firstName}\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"Enter your first name\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    value={formData.lastName}\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"Enter your last name\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"Enter your email\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"Enter your password\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={formData.confirmPassword}\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"Confirm your password\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"w-100 mb-3\"\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? 'Registering...' : 'Register'}\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  type=\"button\"\r\n                  className=\"w-100\"\r\n                  onClick={onSwitchToLogin}\r\n                >\r\n                  Already have an account? Login\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register; "],"mappings":"iHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,CAAEC,MAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,SAAS,CAAEC,GAAG,CAAEC,GAAG,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOjF,KAAM,CAAAC,QAAiC,CAAGC,IAAA,EAAqC,IAApC,CAAEC,UAAU,CAAEC,eAAgB,CAAC,CAAAF,IAAA,CACxE,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,CACvCkB,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EAAE,CACZC,eAAe,CAAE,EAAE,CACnBC,SAAS,CAAE,EAAE,CACbC,QAAQ,CAAE,EACZ,CAAC,CAAC,CACF,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACyB,KAAK,CAAEC,QAAQ,CAAC,CAAG1B,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAA2B,YAAY,CAAIC,CAAsC,EAAK,CAC/DX,WAAW,CAAAY,aAAA,CAAAA,aAAA,IACNb,QAAQ,MACX,CAACY,CAAC,CAACE,MAAM,CAACC,IAAI,EAAGH,CAAC,CAACE,MAAM,CAACE,KAAK,EAChC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAL,CAAkB,EAAK,CACjDA,CAAC,CAACM,cAAc,CAAC,CAAC,CAClBV,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CAEZ,GAAIV,QAAQ,CAACG,QAAQ,GAAKH,QAAQ,CAACI,eAAe,CAAE,CAClDM,QAAQ,CAAC,wBAAwB,CAAC,CAClCF,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA,GAAI,CACF,KAAM,CAAAW,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,oBAAoB,CAAE,CACjDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBvB,KAAK,CAAEF,QAAQ,CAACE,KAAK,CACrBC,QAAQ,CAAEH,QAAQ,CAACG,QAAQ,CAC3BE,SAAS,CAAEL,QAAQ,CAACK,SAAS,CAC7BC,QAAQ,CAAEN,QAAQ,CAACM,QACrB,CAAC,CACH,CAAC,CAAC,CAEF,KAAM,CAAAoB,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAElC,GAAIR,QAAQ,CAACS,EAAE,CAAE,CACf9B,UAAU,CAAC4B,IAAI,CAACG,KAAK,CAAE,CACrB3B,KAAK,CAAEwB,IAAI,CAACxB,KAAK,CACjBG,SAAS,CAAEqB,IAAI,CAACrB,SAAS,CACzBC,QAAQ,CAAEoB,IAAI,CAACpB,QAAQ,CACvBwB,IAAI,CAAEJ,IAAI,CAACI,IACb,CAAC,CAAC,CACJ,CAAC,IAAM,CACLpB,QAAQ,CAACgB,IAAI,EAAI,qBAAqB,CAAC,CACzC,CACF,CAAE,MAAOK,GAAG,CAAE,CACZrB,QAAQ,CAAC,kCAAkC,CAAC,CAC9C,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEf,IAAA,CAACJ,SAAS,EAAC2C,SAAS,CAAC,MAAM,CAAAC,QAAA,cACzBxC,IAAA,CAACH,GAAG,EAAC0C,SAAS,CAAC,wBAAwB,CAAAC,QAAA,cACrCxC,IAAA,CAACF,GAAG,EAAC2C,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAF,QAAA,cAChBtC,KAAA,CAACR,IAAI,EAAA8C,QAAA,eACHxC,IAAA,CAACN,IAAI,CAACiD,MAAM,EAACJ,SAAS,CAAC,aAAa,CAAAC,QAAA,cAClCxC,IAAA,OAAAwC,QAAA,CAAI,6BAA2B,CAAI,CAAC,CACzB,CAAC,cACdtC,KAAA,CAACR,IAAI,CAACkD,IAAI,EAAAJ,QAAA,EACPxB,KAAK,eAAIhB,IAAA,CAACL,KAAK,EAACkD,OAAO,CAAC,QAAQ,CAAAL,QAAA,CAAExB,KAAK,CAAQ,CAAC,cACjDd,KAAA,CAACV,IAAI,EAACsD,QAAQ,CAAEtB,YAAa,CAAAgB,QAAA,eAC3BtC,KAAA,CAACV,IAAI,CAACuD,KAAK,EAACR,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BxC,IAAA,CAACR,IAAI,CAACwD,KAAK,EAAAR,QAAA,CAAC,YAAU,CAAY,CAAC,cACnCxC,IAAA,CAACR,IAAI,CAACyD,OAAO,EACXC,IAAI,CAAC,MAAM,CACX5B,IAAI,CAAC,WAAW,CAChBC,KAAK,CAAEhB,QAAQ,CAACK,SAAU,CAC1BuC,QAAQ,CAAEjC,YAAa,CACvBkC,QAAQ,MACRC,WAAW,CAAC,uBAAuB,CACpC,CAAC,EACQ,CAAC,cAEbnD,KAAA,CAACV,IAAI,CAACuD,KAAK,EAACR,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BxC,IAAA,CAACR,IAAI,CAACwD,KAAK,EAAAR,QAAA,CAAC,WAAS,CAAY,CAAC,cAClCxC,IAAA,CAACR,IAAI,CAACyD,OAAO,EACXC,IAAI,CAAC,MAAM,CACX5B,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEhB,QAAQ,CAACM,QAAS,CACzBsC,QAAQ,CAAEjC,YAAa,CACvBkC,QAAQ,MACRC,WAAW,CAAC,sBAAsB,CACnC,CAAC,EACQ,CAAC,cAEbnD,KAAA,CAACV,IAAI,CAACuD,KAAK,EAACR,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BxC,IAAA,CAACR,IAAI,CAACwD,KAAK,EAAAR,QAAA,CAAC,OAAK,CAAY,CAAC,cAC9BxC,IAAA,CAACR,IAAI,CAACyD,OAAO,EACXC,IAAI,CAAC,OAAO,CACZ5B,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEhB,QAAQ,CAACE,KAAM,CACtB0C,QAAQ,CAAEjC,YAAa,CACvBkC,QAAQ,MACRC,WAAW,CAAC,kBAAkB,CAC/B,CAAC,EACQ,CAAC,cAEbnD,KAAA,CAACV,IAAI,CAACuD,KAAK,EAACR,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BxC,IAAA,CAACR,IAAI,CAACwD,KAAK,EAAAR,QAAA,CAAC,UAAQ,CAAY,CAAC,cACjCxC,IAAA,CAACR,IAAI,CAACyD,OAAO,EACXC,IAAI,CAAC,UAAU,CACf5B,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEhB,QAAQ,CAACG,QAAS,CACzByC,QAAQ,CAAEjC,YAAa,CACvBkC,QAAQ,MACRC,WAAW,CAAC,qBAAqB,CAClC,CAAC,EACQ,CAAC,cAEbnD,KAAA,CAACV,IAAI,CAACuD,KAAK,EAACR,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BxC,IAAA,CAACR,IAAI,CAACwD,KAAK,EAAAR,QAAA,CAAC,kBAAgB,CAAY,CAAC,cACzCxC,IAAA,CAACR,IAAI,CAACyD,OAAO,EACXC,IAAI,CAAC,UAAU,CACf5B,IAAI,CAAC,iBAAiB,CACtBC,KAAK,CAAEhB,QAAQ,CAACI,eAAgB,CAChCwC,QAAQ,CAAEjC,YAAa,CACvBkC,QAAQ,MACRC,WAAW,CAAC,uBAAuB,CACpC,CAAC,EACQ,CAAC,cAEbrD,IAAA,CAACP,MAAM,EACLoD,OAAO,CAAC,SAAS,CACjBK,IAAI,CAAC,QAAQ,CACbX,SAAS,CAAC,YAAY,CACtBe,QAAQ,CAAExC,OAAQ,CAAA0B,QAAA,CAEjB1B,OAAO,CAAG,gBAAgB,CAAG,UAAU,CAClC,CAAC,cAETd,IAAA,CAACP,MAAM,EACLoD,OAAO,CAAC,mBAAmB,CAC3BK,IAAI,CAAC,QAAQ,CACbX,SAAS,CAAC,OAAO,CACjBgB,OAAO,CAAEjD,eAAgB,CAAAkC,QAAA,CAC1B,gCAED,CAAQ,CAAC,EACL,CAAC,EACE,CAAC,EACR,CAAC,CACJ,CAAC,CACH,CAAC,CACG,CAAC,CAEhB,CAAC,CAED,cAAe,CAAArC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}