{"ast":null,"code":"var _jsxFileName = \"E:\\\\Alumini- network\\\\frontend\\\\src\\\\components\\\\Jobs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Jobs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [myApplications, setMyApplications] = useState([]);\n  const [myJobPostings, setMyJobPostings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [activeTab, setActiveTab] = useState('browse');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedJobType, setSelectedJobType] = useState('');\n  const [selectedExperienceLevel, setSelectedExperienceLevel] = useState('');\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [showApplicationForm, setShowApplicationForm] = useState(false);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [jobTypes, setJobTypes] = useState([]);\n  const [experienceLevels, setExperienceLevels] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n\n  // Form states\n  const [jobForm, setJobForm] = useState({\n    title: '',\n    description: '',\n    company: '',\n    location: '',\n    jobType: 'FULL_TIME',\n    experienceLevel: 'ENTRY_LEVEL',\n    requirements: '',\n    responsibilities: '',\n    benefits: '',\n    salaryMin: '',\n    salaryMax: '',\n    salaryCurrency: 'USD',\n    applicationUrl: '',\n    contactEmail: '',\n    applicationDeadline: ''\n  });\n  const [applicationForm, setApplicationForm] = useState({\n    coverLetter: '',\n    resumeUrl: ''\n  });\n  useEffect(() => {\n    const email = localStorage.getItem('userEmail');\n    if (email) {\n      setUserEmail(email);\n    }\n    loadJobs();\n    loadEnums();\n  }, []);\n  useEffect(() => {\n    if (activeTab === 'my-applications') {\n      loadMyApplications();\n    } else if (activeTab === 'my-postings') {\n      loadMyJobPostings();\n    }\n  }, [activeTab, userEmail]);\n  const loadJobs = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/jobs');\n      if (response.ok) {\n        const data = await response.json();\n        setJobs(data);\n      } else {\n        setError('Failed to load jobs');\n      }\n    } catch (err) {\n      setError('Failed to load jobs');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadEnums = async () => {\n    try {\n      const [jobTypesRes, experienceLevelsRes] = await Promise.all([fetch('/api/jobs/types'), fetch('/api/jobs/experience-levels')]);\n      if (jobTypesRes.ok && experienceLevelsRes.ok) {\n        const jobTypesData = await jobTypesRes.json();\n        const experienceLevelsData = await experienceLevelsRes.json();\n        setJobTypes(jobTypesData);\n        setExperienceLevels(experienceLevelsData);\n      }\n    } catch (err) {\n      console.error('Failed to load enums:', err);\n    }\n  };\n  const loadMyApplications = async () => {\n    if (!userEmail) return;\n    try {\n      const response = await fetch(`/api/jobs/applications/my?userEmail=${userEmail}`);\n      if (response.ok) {\n        const data = await response.json();\n        setMyApplications(data);\n      }\n    } catch (err) {\n      console.error('Failed to load applications:', err);\n    }\n  };\n  const loadMyJobPostings = async () => {\n    if (!userEmail) return;\n    try {\n      const response = await fetch(`/api/jobs/my-postings?userEmail=${userEmail}`);\n      if (response.ok) {\n        const data = await response.json();\n        setMyJobPostings(data);\n      }\n    } catch (err) {\n      console.error('Failed to load job postings:', err);\n    }\n  };\n  const searchJobs = async () => {\n    if (!searchTerm.trim()) {\n      loadJobs();\n      return;\n    }\n    try {\n      const response = await fetch(`/api/jobs/search?q=${encodeURIComponent(searchTerm)}`);\n      if (response.ok) {\n        const data = await response.json();\n        setJobs(data);\n      }\n    } catch (err) {\n      setError('Failed to search jobs');\n    }\n  };\n  const filterJobs = () => {\n    let filteredJobs = jobs;\n    if (selectedJobType) {\n      filteredJobs = filteredJobs.filter(job => job.jobType === selectedJobType);\n    }\n    if (selectedExperienceLevel) {\n      filteredJobs = filteredJobs.filter(job => job.experienceLevel === selectedExperienceLevel);\n    }\n    setJobs(filteredJobs);\n  };\n  const createJobPosting = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/api/jobs?userEmail=${userEmail}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jobForm)\n      });\n      if (response.ok) {\n        setShowCreateForm(false);\n        setJobForm({\n          title: '',\n          description: '',\n          company: '',\n          location: '',\n          jobType: 'FULL_TIME',\n          experienceLevel: 'ENTRY_LEVEL',\n          requirements: '',\n          responsibilities: '',\n          benefits: '',\n          salaryMin: '',\n          salaryMax: '',\n          salaryCurrency: 'USD',\n          applicationUrl: '',\n          contactEmail: '',\n          applicationDeadline: ''\n        });\n        loadJobs();\n        if (activeTab === 'my-postings') {\n          loadMyJobPostings();\n        }\n      } else {\n        setError('Failed to create job posting');\n      }\n    } catch (err) {\n      setError('Failed to create job posting');\n    }\n  };\n  const applyForJob = async e => {\n    e.preventDefault();\n    if (!selectedJob) return;\n    try {\n      const response = await fetch(`/api/jobs/${selectedJob.id}/apply?userEmail=${userEmail}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(applicationForm)\n      });\n      if (response.ok) {\n        setShowApplicationForm(false);\n        setSelectedJob(null);\n        setApplicationForm({\n          coverLetter: '',\n          resumeUrl: ''\n        });\n        loadMyApplications();\n        alert('Application submitted successfully!');\n      } else {\n        setError('Failed to submit application');\n      }\n    } catch (err) {\n      setError('Failed to submit application');\n    }\n  };\n  const deleteJobPosting = async jobId => {\n    if (!confirm('Are you sure you want to delete this job posting?')) return;\n    try {\n      const response = await fetch(`/api/jobs/${jobId}?userEmail=${userEmail}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        loadJobs();\n        loadMyJobPostings();\n      } else {\n        setError('Failed to delete job posting');\n      }\n    } catch (err) {\n      setError('Failed to delete job posting');\n    }\n  };\n  const formatSalary = (min, max, currency = 'USD') => {\n    if (!min && !max) return 'Not specified';\n    if (min && max) return `${currency} ${min.toLocaleString()} - ${max.toLocaleString()}`;\n    if (min) return `${currency} ${min.toLocaleString()}+`;\n    if (max) return `Up to ${currency} ${max.toLocaleString()}`;\n    return 'Not specified';\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString();\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'ACTIVE':\n        return 'green';\n      case 'CLOSED':\n        return 'red';\n      case 'EXPIRED':\n        return 'orange';\n      default:\n        return 'gray';\n    }\n  };\n  const getApplicationStatusColor = status => {\n    switch (status) {\n      case 'PENDING':\n        return 'orange';\n      case 'REVIEWING':\n        return 'blue';\n      case 'INTERVIEW_SCHEDULED':\n        return 'purple';\n      case 'INTERVIEWED':\n        return 'indigo';\n      case 'OFFER_EXTENDED':\n        return 'green';\n      case 'ACCEPTED':\n        return 'green';\n      case 'REJECTED':\n        return 'red';\n      case 'WITHDRAWN':\n        return 'gray';\n      default:\n        return 'gray';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-container\",\n      children: \"Loading jobs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Job Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobs-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'browse' ? 'active' : '',\n          onClick: () => setActiveTab('browse'),\n          children: \"Browse Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'my-applications' ? 'active' : '',\n          onClick: () => setActiveTab('my-applications'),\n          children: \"My Applications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'my-postings' ? 'active' : '',\n          onClick: () => setActiveTab('my-postings'),\n          children: \"My Job Postings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }, this), activeTab === 'browse' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-browse\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobs-search-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search jobs...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && searchJobs()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: searchJobs,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedJobType,\n            onChange: e => setSelectedJobType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Job Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), jobTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type.replace('_', ' ')\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedExperienceLevel,\n            onChange: e => setSelectedExperienceLevel(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Experience Levels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), experienceLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: level,\n              children: level.replace('_', ' ')\n            }, level, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: filterJobs,\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSelectedJobType('');\n              setSelectedExperienceLevel('');\n              loadJobs();\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-job-btn\",\n          onClick: () => setShowCreateForm(true),\n          children: \"Post a Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobs-list\",\n        children: jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-jobs\",\n          children: \"No jobs found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 15\n        }, this) : jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-badge ${getStatusColor(job.status)}`,\n              children: job.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-company\",\n            children: job.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-location\",\n            children: job.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"job-type\",\n              children: job.jobType.replace('_', ' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"experience-level\",\n              children: job.experienceLevel.replace('_', ' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"salary\",\n              children: formatSalary(job.salaryMin, job.salaryMax, job.salaryCurrency)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-description\",\n            children: job.description.length > 200 ? `${job.description.substring(0, 200)}...` : job.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Posted by: \", job.postedByName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Applications: \", job.applicationCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Posted: \", formatDate(job.createdAt)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectedJob(job);\n                  setShowApplicationForm(true);\n                },\n                children: \"Apply Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 23\n              }, this), job.applicationUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n                href: job.applicationUrl,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"External Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 19\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this), activeTab === 'my-applications' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-applications\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Job Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), myApplications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-applications\",\n        children: \"No applications yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"applications-list\",\n        children: myApplications.map(application => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"application-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"application-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: application.jobPosting.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-badge ${getApplicationStatusColor(application.status)}`,\n              children: application.status.replace('_', ' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"application-company\",\n            children: application.jobPosting.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"application-date\",\n            children: [\"Applied: \", formatDate(application.createdAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 19\n          }, this), application.coverLetter && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"application-cover-letter\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cover Letter:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 23\n            }, this), \" \", application.coverLetter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 21\n          }, this), application.resumeUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"application-resume\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: application.resumeUrl,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"View Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 21\n          }, this)]\n        }, application.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }, this), activeTab === 'my-postings' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-postings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-postings-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Job Postings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateForm(true),\n          children: \"Post New Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), myJobPostings.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-postings\",\n        children: \"No job postings yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postings-list\",\n        children: myJobPostings.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posting-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posting-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-badge ${getStatusColor(job.status)}`,\n              children: job.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posting-company\",\n            children: job.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posting-location\",\n            children: job.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posting-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: job.jobType.replace('_', ' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: job.experienceLevel.replace('_', ' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatSalary(job.salaryMin, job.salaryMax, job.salaryCurrency)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posting-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Applications: \", job.applicationCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Posted: \", formatDate(job.createdAt)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posting-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectedJob(job);\n                // Load applications for this job\n              },\n              children: \"View Applications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteJobPosting(job.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 19\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }, this), showCreateForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Post a New Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCreateForm(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: createJobPosting,\n          className: \"job-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Job Title\",\n              value: jobForm.title,\n              onChange: e => setJobForm({\n                ...jobForm,\n                title: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Company\",\n              value: jobForm.company,\n              onChange: e => setJobForm({\n                ...jobForm,\n                company: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Location\",\n              value: jobForm.location,\n              onChange: e => setJobForm({\n                ...jobForm,\n                location: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: jobForm.jobType,\n              onChange: e => setJobForm({\n                ...jobForm,\n                jobType: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"FULL_TIME\",\n                children: \"Full Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"PART_TIME\",\n                children: \"Part Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CONTRACT\",\n                children: \"Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"INTERNSHIP\",\n                children: \"Internship\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"REMOTE\",\n                children: \"Remote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: jobForm.experienceLevel,\n              onChange: e => setJobForm({\n                ...jobForm,\n                experienceLevel: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ENTRY_LEVEL\",\n                children: \"Entry Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"JUNIOR\",\n                children: \"Junior\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MID_LEVEL\",\n                children: \"Mid Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"SENIOR\",\n                children: \"Senior\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"LEAD\",\n                children: \"Lead\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Contact Email\",\n              value: jobForm.contactEmail,\n              onChange: e => setJobForm({\n                ...jobForm,\n                contactEmail: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Min Salary\",\n              value: jobForm.salaryMin,\n              onChange: e => setJobForm({\n                ...jobForm,\n                salaryMin: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Max Salary\",\n              value: jobForm.salaryMax,\n              onChange: e => setJobForm({\n                ...jobForm,\n                salaryMax: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Job Description\",\n            value: jobForm.description,\n            onChange: e => setJobForm({\n              ...jobForm,\n              description: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Requirements (optional)\",\n            value: jobForm.requirements,\n            onChange: e => setJobForm({\n              ...jobForm,\n              requirements: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Responsibilities (optional)\",\n            value: jobForm.responsibilities,\n            onChange: e => setJobForm({\n              ...jobForm,\n              responsibilities: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Benefits (optional)\",\n            value: jobForm.benefits,\n            onChange: e => setJobForm({\n              ...jobForm,\n              benefits: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              placeholder: \"Application URL (optional)\",\n              value: jobForm.applicationUrl,\n              onChange: e => setJobForm({\n                ...jobForm,\n                applicationUrl: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              placeholder: \"Application Deadline\",\n              value: jobForm.applicationDeadline,\n              onChange: e => setJobForm({\n                ...jobForm,\n                applicationDeadline: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Post Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowCreateForm(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 9\n    }, this), showApplicationForm && selectedJob && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Apply for \", selectedJob.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowApplicationForm(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: applyForJob,\n          className: \"application-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: selectedJob.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [selectedJob.company, \" \\u2022 \", selectedJob.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [selectedJob.jobType.replace('_', ' '), \" \\u2022 \", selectedJob.experienceLevel.replace('_', ' ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Cover Letter (optional)\",\n            value: applicationForm.coverLetter,\n            onChange: e => setApplicationForm({\n              ...applicationForm,\n              coverLetter: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            placeholder: \"Resume URL (optional)\",\n            value: applicationForm.resumeUrl,\n            onChange: e => setApplicationForm({\n              ...applicationForm,\n              resumeUrl: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit Application\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowApplicationForm(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(Jobs, \"ZSvBfc9mFM5O+f6AXtHXkopTZsg=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Jobs","_s","jobs","setJobs","myApplications","setMyApplications","myJobPostings","setMyJobPostings","loading","setLoading","error","setError","activeTab","setActiveTab","searchTerm","setSearchTerm","selectedJobType","setSelectedJobType","selectedExperienceLevel","setSelectedExperienceLevel","showCreateForm","setShowCreateForm","showApplicationForm","setShowApplicationForm","selectedJob","setSelectedJob","jobTypes","setJobTypes","experienceLevels","setExperienceLevels","userEmail","setUserEmail","jobForm","setJobForm","title","description","company","location","jobType","experienceLevel","requirements","responsibilities","benefits","salaryMin","salaryMax","salaryCurrency","applicationUrl","contactEmail","applicationDeadline","applicationForm","setApplicationForm","coverLetter","resumeUrl","email","localStorage","getItem","loadJobs","loadEnums","loadMyApplications","loadMyJobPostings","response","fetch","ok","data","json","err","jobTypesRes","experienceLevelsRes","Promise","all","jobTypesData","experienceLevelsData","console","searchJobs","trim","encodeURIComponent","filterJobs","filteredJobs","filter","job","createJobPosting","e","preventDefault","method","headers","body","JSON","stringify","applyForJob","id","alert","deleteJobPosting","jobId","confirm","formatSalary","min","max","currency","toLocaleString","formatDate","dateString","Date","toLocaleDateString","getStatusColor","status","getApplicationStatusColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","target","onKeyPress","key","map","replace","level","length","substring","postedByName","applicationCount","createdAt","href","rel","application","jobPosting","onSubmit","required","_c","$RefreshReg$"],"sources":["E:/Alumini- network/frontend/src/components/Jobs.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Jobs.css';\r\n\r\ninterface JobPosting {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  company: string;\r\n  location: string;\r\n  jobType: string;\r\n  experienceLevel: string;\r\n  requirements?: string;\r\n  responsibilities?: string;\r\n  benefits?: string;\r\n  salaryMin?: number;\r\n  salaryMax?: number;\r\n  salaryCurrency: string;\r\n  applicationUrl?: string;\r\n  contactEmail?: string;\r\n  status: string;\r\n  applicationDeadline?: string;\r\n  postedByName: string;\r\n  postedByEmail: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  applicationCount: number;\r\n}\r\n\r\ninterface JobApplication {\r\n  id: number;\r\n  applicant: {\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n  };\r\n  jobPosting: JobPosting;\r\n  coverLetter?: string;\r\n  resumeUrl?: string;\r\n  status: string;\r\n  notes?: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nconst Jobs: React.FC = () => {\r\n  const [jobs, setJobs] = useState<JobPosting[]>([]);\r\n  const [myApplications, setMyApplications] = useState<JobApplication[]>([]);\r\n  const [myJobPostings, setMyJobPostings] = useState<JobPosting[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [activeTab, setActiveTab] = useState('browse');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedJobType, setSelectedJobType] = useState('');\r\n  const [selectedExperienceLevel, setSelectedExperienceLevel] = useState('');\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [showApplicationForm, setShowApplicationForm] = useState(false);\r\n  const [selectedJob, setSelectedJob] = useState<JobPosting | null>(null);\r\n  const [jobTypes, setJobTypes] = useState<string[]>([]);\r\n  const [experienceLevels, setExperienceLevels] = useState<string[]>([]);\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  // Form states\r\n  const [jobForm, setJobForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    company: '',\r\n    location: '',\r\n    jobType: 'FULL_TIME',\r\n    experienceLevel: 'ENTRY_LEVEL',\r\n    requirements: '',\r\n    responsibilities: '',\r\n    benefits: '',\r\n    salaryMin: '',\r\n    salaryMax: '',\r\n    salaryCurrency: 'USD',\r\n    applicationUrl: '',\r\n    contactEmail: '',\r\n    applicationDeadline: ''\r\n  });\r\n\r\n  const [applicationForm, setApplicationForm] = useState({\r\n    coverLetter: '',\r\n    resumeUrl: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const email = localStorage.getItem('userEmail');\r\n    if (email) {\r\n      setUserEmail(email);\r\n    }\r\n    loadJobs();\r\n    loadEnums();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === 'my-applications') {\r\n      loadMyApplications();\r\n    } else if (activeTab === 'my-postings') {\r\n      loadMyJobPostings();\r\n    }\r\n  }, [activeTab, userEmail]);\r\n\r\n  const loadJobs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/jobs');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setJobs(data);\r\n      } else {\r\n        setError('Failed to load jobs');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to load jobs');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadEnums = async () => {\r\n    try {\r\n      const [jobTypesRes, experienceLevelsRes] = await Promise.all([\r\n        fetch('/api/jobs/types'),\r\n        fetch('/api/jobs/experience-levels')\r\n      ]);\r\n      \r\n      if (jobTypesRes.ok && experienceLevelsRes.ok) {\r\n        const jobTypesData = await jobTypesRes.json();\r\n        const experienceLevelsData = await experienceLevelsRes.json();\r\n        setJobTypes(jobTypesData);\r\n        setExperienceLevels(experienceLevelsData);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to load enums:', err);\r\n    }\r\n  };\r\n\r\n  const loadMyApplications = async () => {\r\n    if (!userEmail) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/jobs/applications/my?userEmail=${userEmail}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setMyApplications(data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to load applications:', err);\r\n    }\r\n  };\r\n\r\n  const loadMyJobPostings = async () => {\r\n    if (!userEmail) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/jobs/my-postings?userEmail=${userEmail}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setMyJobPostings(data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to load job postings:', err);\r\n    }\r\n  };\r\n\r\n  const searchJobs = async () => {\r\n    if (!searchTerm.trim()) {\r\n      loadJobs();\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`/api/jobs/search?q=${encodeURIComponent(searchTerm)}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setJobs(data);\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to search jobs');\r\n    }\r\n  };\r\n\r\n  const filterJobs = () => {\r\n    let filteredJobs = jobs;\r\n    \r\n    if (selectedJobType) {\r\n      filteredJobs = filteredJobs.filter(job => job.jobType === selectedJobType);\r\n    }\r\n    \r\n    if (selectedExperienceLevel) {\r\n      filteredJobs = filteredJobs.filter(job => job.experienceLevel === selectedExperienceLevel);\r\n    }\r\n    \r\n    setJobs(filteredJobs);\r\n  };\r\n\r\n  const createJobPosting = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const response = await fetch(`/api/jobs?userEmail=${userEmail}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jobForm),\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setShowCreateForm(false);\r\n        setJobForm({\r\n          title: '', description: '', company: '', location: '', \r\n          jobType: 'FULL_TIME', experienceLevel: 'ENTRY_LEVEL',\r\n          requirements: '', responsibilities: '', benefits: '', salaryMin: '', salaryMax: '',\r\n          salaryCurrency: 'USD', applicationUrl: '', contactEmail: '', applicationDeadline: ''\r\n        });\r\n        loadJobs();\r\n        if (activeTab === 'my-postings') {\r\n          loadMyJobPostings();\r\n        }\r\n      } else {\r\n        setError('Failed to create job posting');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to create job posting');\r\n    }\r\n  };\r\n\r\n  const applyForJob = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedJob) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/jobs/${selectedJob.id}/apply?userEmail=${userEmail}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(applicationForm),\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setShowApplicationForm(false);\r\n        setSelectedJob(null);\r\n        setApplicationForm({ coverLetter: '', resumeUrl: '' });\r\n        loadMyApplications();\r\n        alert('Application submitted successfully!');\r\n      } else {\r\n        setError('Failed to submit application');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to submit application');\r\n    }\r\n  };\r\n\r\n  const deleteJobPosting = async (jobId: number) => {\r\n    if (!confirm('Are you sure you want to delete this job posting?')) return;\r\n    \r\n    try {\r\n      const response = await fetch(`/api/jobs/${jobId}?userEmail=${userEmail}`, {\r\n        method: 'DELETE',\r\n      });\r\n      \r\n      if (response.ok) {\r\n        loadJobs();\r\n        loadMyJobPostings();\r\n      } else {\r\n        setError('Failed to delete job posting');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to delete job posting');\r\n    }\r\n  };\r\n\r\n  const formatSalary = (min?: number, max?: number, currency: string = 'USD') => {\r\n    if (!min && !max) return 'Not specified';\r\n    if (min && max) return `${currency} ${min.toLocaleString()} - ${max.toLocaleString()}`;\r\n    if (min) return `${currency} ${min.toLocaleString()}+`;\r\n    if (max) return `Up to ${currency} ${max.toLocaleString()}`;\r\n    return 'Not specified';\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'ACTIVE': return 'green';\r\n      case 'CLOSED': return 'red';\r\n      case 'EXPIRED': return 'orange';\r\n      default: return 'gray';\r\n    }\r\n  };\r\n\r\n  const getApplicationStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'PENDING': return 'orange';\r\n      case 'REVIEWING': return 'blue';\r\n      case 'INTERVIEW_SCHEDULED': return 'purple';\r\n      case 'INTERVIEWED': return 'indigo';\r\n      case 'OFFER_EXTENDED': return 'green';\r\n      case 'ACCEPTED': return 'green';\r\n      case 'REJECTED': return 'red';\r\n      case 'WITHDRAWN': return 'gray';\r\n      default: return 'gray';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"jobs-container\">Loading jobs...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"jobs-container\">\r\n      <div className=\"jobs-header\">\r\n        <h2>Job Board</h2>\r\n        <div className=\"jobs-tabs\">\r\n          <button \r\n            className={activeTab === 'browse' ? 'active' : ''} \r\n            onClick={() => setActiveTab('browse')}\r\n          >\r\n            Browse Jobs\r\n          </button>\r\n          <button \r\n            className={activeTab === 'my-applications' ? 'active' : ''} \r\n            onClick={() => setActiveTab('my-applications')}\r\n          >\r\n            My Applications\r\n          </button>\r\n          <button \r\n            className={activeTab === 'my-postings' ? 'active' : ''} \r\n            onClick={() => setActiveTab('my-postings')}\r\n          >\r\n            My Job Postings\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {activeTab === 'browse' && (\r\n        <div className=\"jobs-browse\">\r\n          <div className=\"jobs-search-filter\">\r\n            <div className=\"search-section\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search jobs...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && searchJobs()}\r\n              />\r\n              <button onClick={searchJobs}>Search</button>\r\n            </div>\r\n            \r\n            <div className=\"filter-section\">\r\n              <select \r\n                value={selectedJobType} \r\n                onChange={(e) => setSelectedJobType(e.target.value)}\r\n              >\r\n                <option value=\"\">All Job Types</option>\r\n                {jobTypes.map(type => (\r\n                  <option key={type} value={type}>{type.replace('_', ' ')}</option>\r\n                ))}\r\n              </select>\r\n              \r\n              <select \r\n                value={selectedExperienceLevel} \r\n                onChange={(e) => setSelectedExperienceLevel(e.target.value)}\r\n              >\r\n                <option value=\"\">All Experience Levels</option>\r\n                {experienceLevels.map(level => (\r\n                  <option key={level} value={level}>{level.replace('_', ' ')}</option>\r\n                ))}\r\n              </select>\r\n              \r\n              <button onClick={filterJobs}>Filter</button>\r\n              <button onClick={() => {\r\n                setSelectedJobType('');\r\n                setSelectedExperienceLevel('');\r\n                loadJobs();\r\n              }}>Clear</button>\r\n            </div>\r\n            \r\n            <button \r\n              className=\"create-job-btn\"\r\n              onClick={() => setShowCreateForm(true)}\r\n            >\r\n              Post a Job\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"jobs-list\">\r\n            {jobs.length === 0 ? (\r\n              <div className=\"no-jobs\">No jobs found</div>\r\n            ) : (\r\n              jobs.map(job => (\r\n                <div key={job.id} className=\"job-card\">\r\n                  <div className=\"job-header\">\r\n                    <h3>{job.title}</h3>\r\n                    <span className={`status-badge ${getStatusColor(job.status)}`}>\r\n                      {job.status}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className=\"job-company\">{job.company}</div>\r\n                  <div className=\"job-location\">{job.location}</div>\r\n                  \r\n                  <div className=\"job-details\">\r\n                    <span className=\"job-type\">{job.jobType.replace('_', ' ')}</span>\r\n                    <span className=\"experience-level\">{job.experienceLevel.replace('_', ' ')}</span>\r\n                    <span className=\"salary\">{formatSalary(job.salaryMin, job.salaryMax, job.salaryCurrency)}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"job-description\">\r\n                    {job.description.length > 200 \r\n                      ? `${job.description.substring(0, 200)}...` \r\n                      : job.description\r\n                    }\r\n                  </div>\r\n                  \r\n                  <div className=\"job-footer\">\r\n                    <div className=\"job-meta\">\r\n                      <span>Posted by: {job.postedByName}</span>\r\n                      <span>Applications: {job.applicationCount}</span>\r\n                      <span>Posted: {formatDate(job.createdAt)}</span>\r\n                    </div>\r\n                    \r\n                    <div className=\"job-actions\">\r\n                      <button onClick={() => {\r\n                        setSelectedJob(job);\r\n                        setShowApplicationForm(true);\r\n                      }}>\r\n                        Apply Now\r\n                      </button>\r\n                      {job.applicationUrl && (\r\n                        <a href={job.applicationUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          External Apply\r\n                        </a>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'my-applications' && (\r\n        <div className=\"my-applications\">\r\n          <h3>My Job Applications</h3>\r\n          {myApplications.length === 0 ? (\r\n            <div className=\"no-applications\">No applications yet</div>\r\n          ) : (\r\n            <div className=\"applications-list\">\r\n              {myApplications.map(application => (\r\n                <div key={application.id} className=\"application-card\">\r\n                  <div className=\"application-header\">\r\n                    <h4>{application.jobPosting.title}</h4>\r\n                    <span className={`status-badge ${getApplicationStatusColor(application.status)}`}>\r\n                      {application.status.replace('_', ' ')}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className=\"application-company\">{application.jobPosting.company}</div>\r\n                  <div className=\"application-date\">Applied: {formatDate(application.createdAt)}</div>\r\n                  \r\n                  {application.coverLetter && (\r\n                    <div className=\"application-cover-letter\">\r\n                      <strong>Cover Letter:</strong> {application.coverLetter}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {application.resumeUrl && (\r\n                    <div className=\"application-resume\">\r\n                      <a href={application.resumeUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        View Resume\r\n                      </a>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'my-postings' && (\r\n        <div className=\"my-postings\">\r\n          <div className=\"my-postings-header\">\r\n            <h3>My Job Postings</h3>\r\n            <button onClick={() => setShowCreateForm(true)}>Post New Job</button>\r\n          </div>\r\n          \r\n          {myJobPostings.length === 0 ? (\r\n            <div className=\"no-postings\">No job postings yet</div>\r\n          ) : (\r\n            <div className=\"postings-list\">\r\n              {myJobPostings.map(job => (\r\n                <div key={job.id} className=\"posting-card\">\r\n                  <div className=\"posting-header\">\r\n                    <h4>{job.title}</h4>\r\n                    <span className={`status-badge ${getStatusColor(job.status)}`}>\r\n                      {job.status}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className=\"posting-company\">{job.company}</div>\r\n                  <div className=\"posting-location\">{job.location}</div>\r\n                  \r\n                  <div className=\"posting-details\">\r\n                    <span>{job.jobType.replace('_', ' ')}</span>\r\n                    <span>{job.experienceLevel.replace('_', ' ')}</span>\r\n                    <span>{formatSalary(job.salaryMin, job.salaryMax, job.salaryCurrency)}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"posting-meta\">\r\n                    <span>Applications: {job.applicationCount}</span>\r\n                    <span>Posted: {formatDate(job.createdAt)}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"posting-actions\">\r\n                    <button onClick={() => {\r\n                      setSelectedJob(job);\r\n                      // Load applications for this job\r\n                    }}>\r\n                      View Applications\r\n                    </button>\r\n                    <button onClick={() => deleteJobPosting(job.id)}>\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Create Job Form Modal */}\r\n      {showCreateForm && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>Post a New Job</h3>\r\n              <button onClick={() => setShowCreateForm(false)}>&times;</button>\r\n            </div>\r\n            \r\n            <form onSubmit={createJobPosting} className=\"job-form\">\r\n              <div className=\"form-row\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Job Title\"\r\n                  value={jobForm.title}\r\n                  onChange={(e) => setJobForm({...jobForm, title: e.target.value})}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Company\"\r\n                  value={jobForm.company}\r\n                  onChange={(e) => setJobForm({...jobForm, company: e.target.value})}\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-row\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Location\"\r\n                  value={jobForm.location}\r\n                  onChange={(e) => setJobForm({...jobForm, location: e.target.value})}\r\n                />\r\n                <select\r\n                  value={jobForm.jobType}\r\n                  onChange={(e) => setJobForm({...jobForm, jobType: e.target.value})}\r\n                  required\r\n                >\r\n                  <option value=\"FULL_TIME\">Full Time</option>\r\n                  <option value=\"PART_TIME\">Part Time</option>\r\n                  <option value=\"CONTRACT\">Contract</option>\r\n                  <option value=\"INTERNSHIP\">Internship</option>\r\n                  <option value=\"REMOTE\">Remote</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"form-row\">\r\n                <select\r\n                  value={jobForm.experienceLevel}\r\n                  onChange={(e) => setJobForm({...jobForm, experienceLevel: e.target.value})}\r\n                  required\r\n                >\r\n                  <option value=\"ENTRY_LEVEL\">Entry Level</option>\r\n                  <option value=\"JUNIOR\">Junior</option>\r\n                  <option value=\"MID_LEVEL\">Mid Level</option>\r\n                  <option value=\"SENIOR\">Senior</option>\r\n                  <option value=\"LEAD\">Lead</option>\r\n                </select>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Contact Email\"\r\n                  value={jobForm.contactEmail}\r\n                  onChange={(e) => setJobForm({...jobForm, contactEmail: e.target.value})}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-row\">\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Min Salary\"\r\n                  value={jobForm.salaryMin}\r\n                  onChange={(e) => setJobForm({...jobForm, salaryMin: e.target.value})}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Max Salary\"\r\n                  value={jobForm.salaryMax}\r\n                  onChange={(e) => setJobForm({...jobForm, salaryMax: e.target.value})}\r\n                />\r\n              </div>\r\n              \r\n              <textarea\r\n                placeholder=\"Job Description\"\r\n                value={jobForm.description}\r\n                onChange={(e) => setJobForm({...jobForm, description: e.target.value})}\r\n                required\r\n              />\r\n              \r\n              <textarea\r\n                placeholder=\"Requirements (optional)\"\r\n                value={jobForm.requirements}\r\n                onChange={(e) => setJobForm({...jobForm, requirements: e.target.value})}\r\n              />\r\n              \r\n              <textarea\r\n                placeholder=\"Responsibilities (optional)\"\r\n                value={jobForm.responsibilities}\r\n                onChange={(e) => setJobForm({...jobForm, responsibilities: e.target.value})}\r\n              />\r\n              \r\n              <textarea\r\n                placeholder=\"Benefits (optional)\"\r\n                value={jobForm.benefits}\r\n                onChange={(e) => setJobForm({...jobForm, benefits: e.target.value})}\r\n              />\r\n              \r\n              <div className=\"form-row\">\r\n                <input\r\n                  type=\"url\"\r\n                  placeholder=\"Application URL (optional)\"\r\n                  value={jobForm.applicationUrl}\r\n                  onChange={(e) => setJobForm({...jobForm, applicationUrl: e.target.value})}\r\n                />\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  placeholder=\"Application Deadline\"\r\n                  value={jobForm.applicationDeadline}\r\n                  onChange={(e) => setJobForm({...jobForm, applicationDeadline: e.target.value})}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-actions\">\r\n                <button type=\"submit\">Post Job</button>\r\n                <button type=\"button\" onClick={() => setShowCreateForm(false)}>Cancel</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Application Form Modal */}\r\n      {showApplicationForm && selectedJob && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <div className=\"modal-header\">\r\n              <h3>Apply for {selectedJob.title}</h3>\r\n              <button onClick={() => setShowApplicationForm(false)}>&times;</button>\r\n            </div>\r\n            \r\n            <form onSubmit={applyForJob} className=\"application-form\">\r\n              <div className=\"job-summary\">\r\n                <h4>{selectedJob.title}</h4>\r\n                <p>{selectedJob.company} • {selectedJob.location}</p>\r\n                <p>{selectedJob.jobType.replace('_', ' ')} • {selectedJob.experienceLevel.replace('_', ' ')}</p>\r\n              </div>\r\n              \r\n              <textarea\r\n                placeholder=\"Cover Letter (optional)\"\r\n                value={applicationForm.coverLetter}\r\n                onChange={(e) => setApplicationForm({...applicationForm, coverLetter: e.target.value})}\r\n              />\r\n              \r\n              <input\r\n                type=\"url\"\r\n                placeholder=\"Resume URL (optional)\"\r\n                value={applicationForm.resumeUrl}\r\n                onChange={(e) => setApplicationForm({...applicationForm, resumeUrl: e.target.value})}\r\n              />\r\n              \r\n              <div className=\"form-actions\">\r\n                <button type=\"submit\">Submit Application</button>\r\n                <button type=\"button\" onClick={() => setShowApplicationForm(false)}>Cancel</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}